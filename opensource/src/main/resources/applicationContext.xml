<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	>

	<description>Spring公共配置</description>
	<context:component-scan base-package="*" />
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<!--<context:component-scan base-package=""> -->
	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
	<!--</context:component-scan> -->

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.opensource.entity" />

		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatisM/*.xml" />
	</bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.opensource.mapper" />
		<property name="annotationClass" 
			value="com.opensource.mapper.IbatisMapper" />
	</bean>

	<!-- 另一个事务管理器, Jdbc单数据源事务 -->
	<!-- <bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="quartzDataSource" /> </bean> -->

	<!-- 使用annotation定义事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" 
		/> -->

	<!-- 定义aspectj -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath*:/config.properties" />

		<!-- 数据源配置,使用C3P0连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<!-- Connection Info -->
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="initialPoolSize">
				<value>${c3p0.initialPoolSize}</value>
			</property>
			<property name="minPoolSize">
				<value>${c3p0.minPoolSize}</value>
			</property>
			<property name="maxPoolSize">
				<value>${c3p0.maxPoolSize}</value>
			</property>
			<property name="acquireIncrement">
				<value>${c3p0.acquireIncrement}</value>
			</property>
			<property name="maxIdleTime">
				<value>${c3p0.maxIdleTime}</value>
			</property>
			<property name="maxStatements">
				<value>${c3p0.maxStatements}</value>
			</property>
			<property name="maxStatementsPerConnection">
				<value>${c3p0.maxStatementsPerConnection}</value>
			</property>
			<property name="idleConnectionTestPeriod">
				<value>${c3p0.idleConnectionTestPeriod}</value>
			</property>
			<property name="preferredTestQuery">
				<value>select 1</value>
			</property>
		</bean>
	</beans>
</beans>